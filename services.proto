syntax = "proto3";

package EcdarProtoBuf;

option java_multiple_files = false;
option java_package = "EcdarProtoBuf";
option java_outer_classname = "ServiceProtos";

import "query.proto";
import "api.proto";

import "google/protobuf/empty.proto";

service EcdarBackend {
    rpc GetUserToken(google.protobuf.Empty) returns (UserTokenResponse);
    rpc SendQuery(QueryRequest) returns (QueryResponse);

    rpc StartSimulation(SimulationStartRequest) returns (SimulationStepResponse);
    rpc TakeSimulationStep(SimulationStepRequest) returns (SimulationStepResponse);
}

service EcdarApi {
    rpc GetModel(GetModelRequest) returns (GetModelResponse);
    rpc CreateModel(CreateModelRequest) returns (CreateModelResponse);
    rpc UpdateModel(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc DeleteModel(DeleteModelRequest) returns (google.protobuf.Empty);
    rpc ListModelsInfo(google.protobuf.Empty) returns (ListModelsInfoResponse);

    rpc CreateAccess(CreateAccessRequest) returns (google.protobuf.Empty);
    rpc UpdateAccess(UpdateAccessRequest) returns (google.protobuf.Empty);
    rpc DeleteAccess(DeleteAccessRequest) returns (google.protobuf.Empty);

    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
    rpc DeleteUser(google.protobuf.Empty) returns (google.protobuf.Empty);

    rpc CreateQuery(CreateQueryRequest) returns (google.protobuf.Empty);
    rpc UpdateQuery(UpdateQueryRequest) returns (google.protobuf.Empty);
    rpc DeleteQuery(DeleteQueryRequest) returns (google.protobuf.Empty);
}

service EcdarApiAuth {
    rpc GetAuthToken(GetAuthTokenRequest) returns (GetAuthTokenResponse);
    rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty);
}
