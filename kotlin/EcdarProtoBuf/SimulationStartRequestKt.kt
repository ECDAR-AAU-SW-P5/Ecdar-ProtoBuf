//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: query.proto

package EcdarProtoBuf;

@kotlin.jvm.JvmSynthetic
inline fun simulationStartRequest(block: EcdarProtoBuf.SimulationStartRequestKt.Dsl.() -> kotlin.Unit): EcdarProtoBuf.QueryProtos.SimulationStartRequest =
  EcdarProtoBuf.SimulationStartRequestKt.Dsl._create(EcdarProtoBuf.QueryProtos.SimulationStartRequest.newBuilder()).apply { block() }._build()
object SimulationStartRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: EcdarProtoBuf.QueryProtos.SimulationStartRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: EcdarProtoBuf.QueryProtos.SimulationStartRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): EcdarProtoBuf.QueryProtos.SimulationStartRequest = _builder.build()

    /**
     * <pre>
     * e.g. "(A || B) &amp;&amp; C" or "A&lt;=B"
     * </pre>
     *
     * <code>string system = 1;</code>
     */
    var system: kotlin.String
      @JvmName("getSystem")
      get() = _builder.getSystem()
      @JvmName("setSystem")
      set(value) {
        _builder.setSystem(value)
      }
    /**
     * <pre>
     * e.g. "(A || B) &amp;&amp; C" or "A&lt;=B"
     * </pre>
     *
     * <code>string system = 1;</code>
     */
    fun clearSystem() {
      _builder.clearSystem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun EcdarProtoBuf.QueryProtos.SimulationStartRequest.copy(block: EcdarProtoBuf.SimulationStartRequestKt.Dsl.() -> kotlin.Unit): EcdarProtoBuf.QueryProtos.SimulationStartRequest =
  EcdarProtoBuf.SimulationStartRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
